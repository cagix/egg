var searchIndex = new Map(JSON.parse('[\
["egg",{"t":"RKKFFFPPKFFPRKRFRFFFPGPRFFIFKFPFFKPGRKKKKFFGPPFPIPFGFFKPFPFKFFGFFFPIFIFPPNNNNNNNNNNNNONNOOONNNNNMNNNNNOONMNNMNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNOMNNOOMNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONMNNNNOONNNNNNNQNNNNNNMNNNNNOOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNMNNNNNNNMMNMNNNMNMNNNNNMNMNNOMHHHNNQNNOONNNNNNNNNNNNNNOOMNONONNNNNNNNNNNNNNNOOONNNQONNNNNNNNNNMNNNNNOONNNNONNNNNNNNNNNNNNNOOOOQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCC","n":["A2","Analysis","Applier","AstDepth","AstSize","BackoffScheduler","BadOp","BadSexp","Condition","ConditionEqual","ConditionalApplier","Congruence","Cost","CostFunction","Data","DidMerge","Discriminant","Dot","EClass","EGraph","ENode","ENodeOrVar","EmptySexp","Error","Explanation","Extractor","FlatExplanation","FlatTerm","FromOp","FromOpError","HeadList","Id","Iteration","IterationData","IterationLimit","Justification","L2","Language","LanguageChildren","LanguageMapper","LpCostFunction","LpExtractor","MultiPattern","MultiPatternParseError","NodeLimit","Other","Pattern","PatternAssignmentError","PatternAst","PatternParseError","RecExpr","RecExprParseError","Report","Rewrite","RewriteScheduler","Rule","Runner","Saturated","SearchMatches","Searcher","SimpleLanguageMapper","SimpleScheduler","StopReason","Subst","Symbol","SymbolLang","TimeLimit","TreeExplanation","TreeTerm","UnionEqualities","Var","Var","VariableError","add","add","add_expr","add_expr_uncanonical","add_instantiation","add_uncanonical","all","all","allow_ematching_cycles","allow_ematching_cycles","alpha_rename","alpha_rename","analysis","any","any","applied","applier","applier","apply","apply_matches","apply_matches","apply_matches","apply_matches","apply_one","apply_one","apply_one","apply_one","apply_rewrite","apply_rewrite","apply_time","apply_time","are_explanations_enabled","as_mut_slice","as_mut_slice","as_ref","as_slice","as_slice","as_str","as_u32","assert_unique_leaves","ast","ast","backward_rule","backward_rule","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_recexpr","build_recexpr","can_be_length","can_be_length","can_stop","can_stop","can_stop","check","check","check_goals","check_proof","child_proofs","children","children","children","children","children","children_mut","children_mut","children_mut","classes","classes_mut","clean","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","condition","config","copy_without_unions","cost","cost","cost","cost_rec","cost_rec","data","data","default","default","default","default","default","default","default","define_language","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discriminant","discriminant","discriminant","do_not_ban","dot","dump","eclass","egraph","egraph_classes","egraph_classes","egraph_intersect","egraph_nodes","egraph_nodes","egraph_union","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivs","explain_equivalence","explain_equivalence","explain_existance","explain_existance","explain_existance_pattern","explain_existance_pattern","explain_id_equivalence","explain_matches","explain_matches","explanation_trees","find","find_best","find_best_cost","find_best_node","flatten_explanation","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","for_each_mut","for_each_mut","forward_rule","forward_rule","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_op","from_op","from_op","from_str","from_str","from_str","from_str","from_str","from_u32","from_vec","from_vec","get","get_explanation_num_nodes","get_flat_string","get_flat_strings","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_initial_flat_term","get_last_flat_term","get_num_congr","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_pattern_ast","get_recexpr","get_string","get_string","get_string_with_let","get_tree_size","get_union_equalities","has_rewrite_backward","has_rewrite_forward","hash","hash","hash","hash","hash","hash","hash","hash","hook_time","hooks","id","id_to_expr","id_to_node","id_to_pattern","index","index","index","index_mut","index_mut","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_dag","is_empty","is_empty","is_empty","is_empty","is_leaf","is_leaf","iter","iterations","iterations","join_recexprs","join_recexprs","leaf","leaves","len","len","len","len","len","lookup","lookup_expr","lookup_expr_ids","make","make","make_flat_explanation","map_analysis","map_analysis","map_children","map_children","map_data","map_data","map_discriminant","map_discriminant","map_eclass","map_eclass","map_egraph","map_egraph","map_node","map_node","matches","matches","matches","memo_size","merge","merge_max","merge_min","merge_option","modify","modify","multi_rewrite","n_matches","n_matches","n_rebuilds","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","node","node","node_cost","node_cost","nodes","number_of_classes","op","parents","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_union","pre_union","pretty","pretty","print_report","rebuild","rebuild_time","rebuild_time","rebuilds","remove_rewrites","report","rewrite","rewrite","roots","rule_ban_length","rule_match_limit","run","run","run_dot","search","search","search","search_eclass","search_eclass","search_eclass_with_limit","search_eclass_with_limit","search_eclass_with_limit","search_rewrite","search_rewrite","search_rewrite","search_time","search_time","search_with_limit","search_with_limit","search_with_limit","search_with_limit","searcher","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_analysis_data","solve","solve_multiple","source","source","stop_reason","stop_reason","stop_reason","substs","test_fn","timeout","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pdf","to_png","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_svg","total_number_of_nodes","total_size","total_time","total_time","try_build_recexpr","try_build_recexpr","try_for_each","try_for_each","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tutorials","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union_instantiations","union_trusted","update_children","update_children","use_anchors","vars","vars","vars","vars","vars","vars","vars","vars","vars","vars","vars","vars","with_anchors","with_ban_length","with_capacity","with_config_line","with_egraph","with_explanation_length_optimization","with_explanation_length_optimization","with_explanations_disabled","with_explanations_disabled","with_explanations_enabled","with_explanations_enabled","with_expr","with_hook","with_initial_match_limit","with_iter_limit","with_node_limit","with_scheduler","with_time_limit","without_explanation_length_optimization","without_explanation_length_optimization","_01_background","_02_getting_started","_03_explanations"],"q":[[0,"egg"],[870,"egg::tutorials"],[873,"egg::egraph"],[874,"egg::language"],[875,"egg::pattern"],[876,"egg::subst"],[877,"core::fmt"],[878,"core::clone"],[879,"core::cmp"],[880,"core::hash"],[881,"core::ops::function"],[882,"egg::rewrite"],[883,"alloc::vec"],[884,"egg::multipattern"],[885,"core::option"],[886,"egg::run"],[887,"egg::eclass"],[888,"egg::explain"],[889,"core::iter::traits::collect"],[890,"core::iter::traits::exact_size"],[891,"egg::extract"],[892,"core::default"],[893,"core::result"],[894,"serde::de"],[895,"core::convert"],[896,"egg::dot"],[897,"alloc::string"],[898,"core::marker"],[899,"num_bigint::biguint"],[900,"fxhash"],[901,"indexmap::map"],[902,"core::iter::traits::iterator"],[903,"core::borrow"],[904,"egg::lp_extract"],[905,"std::io::error"],[906,"std::ffi::os_str"],[907,"serde::ser"],[908,"core::error"],[909,"std::path"],[910,"core::any"],[911,"core::time"]],"i":[96,0,0,0,0,0,77,77,0,0,0,46,55,0,4,0,3,0,0,0,17,0,77,75,0,0,0,0,0,0,77,0,0,0,49,0,96,0,0,0,0,0,0,0,49,49,0,78,0,78,0,0,0,0,0,46,0,49,0,0,0,0,0,0,0,0,49,0,0,0,0,17,78,1,5,1,1,1,1,3,3,4,4,6,5,1,3,3,51,18,27,18,22,22,24,25,22,24,25,27,29,29,50,51,1,31,2,5,31,2,23,33,35,25,19,47,48,37,66,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,77,44,24,78,25,17,19,18,27,39,49,50,51,79,38,33,7,2,66,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,77,44,24,78,25,17,19,18,27,39,49,50,51,79,38,33,7,2,3,3,31,2,29,29,38,28,39,1,41,47,3,44,17,48,44,3,44,17,1,1,1,23,35,1,46,47,48,5,44,24,25,17,18,27,49,50,51,33,7,2,23,35,1,46,47,48,5,44,24,25,17,18,27,49,50,51,33,7,2,23,5,44,17,33,7,2,27,66,1,55,57,58,55,55,35,51,59,60,1,5,38,7,2,0,23,35,1,46,44,2,3,44,17,38,1,1,19,60,50,51,1,50,51,1,23,46,48,5,44,24,25,17,33,7,2,23,23,46,46,48,48,5,5,44,44,24,24,25,25,17,17,33,33,7,7,2,2,1,60,1,60,1,60,1,1,60,1,41,1,69,69,69,47,66,66,23,23,41,60,35,1,46,47,47,48,48,69,57,58,76,76,5,5,77,77,44,44,24,78,78,25,25,17,17,19,18,27,39,49,50,50,51,79,38,33,33,7,2,2,3,3,3,3,3,3,47,48,66,23,23,23,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,5,77,44,24,78,25,25,25,25,17,19,18,27,39,49,50,51,79,38,33,33,7,2,2,75,44,17,23,5,24,25,33,33,31,2,7,1,41,41,23,46,5,44,17,33,7,2,47,47,1,85,85,22,22,25,25,27,48,41,48,41,41,1,48,48,23,46,5,44,17,33,7,2,51,60,35,1,1,1,1,5,7,1,5,7,66,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,77,44,24,78,25,17,19,18,27,39,49,50,51,79,38,33,7,2,5,31,31,35,1,3,3,35,60,50,3,3,44,35,31,3,3,35,2,1,1,1,4,68,41,96,59,3,3,96,59,96,59,96,96,96,96,96,59,3,44,17,50,4,0,0,0,4,4,0,85,85,51,18,23,41,100,60,1,47,48,69,76,44,24,25,18,39,47,48,101,57,35,1,44,35,39,23,5,44,17,33,7,2,4,4,5,25,60,1,50,51,50,48,60,48,0,60,38,38,66,60,66,85,85,18,85,85,85,24,25,29,29,38,50,51,85,85,25,18,18,23,35,1,46,5,44,49,50,51,2,1,100,100,77,78,60,50,51,19,0,100,66,23,35,1,46,47,48,5,44,24,25,17,18,27,49,50,51,33,7,2,66,66,66,23,41,47,48,76,5,77,44,78,25,17,50,33,2,66,1,1,50,51,3,3,3,3,66,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,5,77,44,24,78,25,17,19,18,27,39,49,50,51,79,38,33,7,2,66,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,77,44,24,78,25,17,19,18,27,39,49,50,51,79,38,33,7,2,0,66,23,59,41,37,100,60,35,1,46,47,48,69,57,58,76,5,77,44,24,78,25,17,19,18,27,39,49,50,51,79,38,33,7,2,1,1,1,3,3,66,85,22,22,28,28,24,24,25,25,25,27,39,66,38,7,66,60,60,1,60,1,60,1,60,60,38,60,60,60,60,60,1,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````{{{b{ce}}c}df{{h{c}}}}{{{j{c}}c}df}{{{b{ce}}{j{c}}}df{{h{c}}}}0{{{b{ce}}{l{c}}n}df{{h{c}}}}3{{{f{}{{A`{c}}}}e}Ab{AdAfAhAj}{{An{d}{{Al{Ab}}}}}}0{{{h{}{{B`{c}}}}}AbAd}0{{{l{c}}}{{l{c}}}f}{{{j{{Bb{c}}}}}{{j{{Bb{c}}}}}f}`33```{{{Bd{ce}}{b{ce}}{Bh{{Bf{c}}}}}{{Bj{d}}}f{{h{c}}}}{{Bl{b{ce}}{Bh{{Bf{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}0{{{C`{c}}{b{ce}}{Bh{{Bf{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{Cb{c}}{b{ce}}{Bh{{Bf{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{Bl{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{C`{c}}{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{Cb{c}}{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}}{{{Cf{gi}}{b{ce}}dn{Cd{{l{c}}}}Bn}{{Bj{d}}}f{{h{c}}}{{Ch{ce}}}{{Bl{ce}}}}{{CjCl{b{ce}}{Bd{ce}}{Bj{{Bf{c}}}}}Clf{{h{c}}}}0``{{{b{ce}}}Abf{{h{c}}}}{Cn{{Bh{d}}}}{d{{Bh{d}}}}{{{j{c}}}{{Bh{c}}}{}}21{BnD`}{Db{{Cd{Dd}}}}{{{Df{ce}}}Dh{ff}{}}````{{DjDj}c{}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{}{{A`{c}}}}e}{{j{{f{}{{A`{c}}}}}}}{AdAfAhAj}{{An{d}{{Al{{f{}{{A`{c}}}}}}}}}}0{ClAb}0{{CjCl}Ab}0{{DlCl}Ab}{{Ch{b{ce}}dn}Abf{{h{c}}}}{{{Dn{c}}{b{ce}}dn}Abf{{h{c}}}}{{{b{ce}}d{Bh{{Cb{c}}}}}Dh{fE`}{{h{c}}}}{{{Eb{c}}g}Dhf{{h{c}}}{{Ef{}{{Ed{{Bd{ce}}}}}}}}`{{{f{}{{A`{c}}}}}{{Bh{d}}}{AdAfAhAj}}{Eh{{Bh{d}}}}{{{Bb{c}}}{{Bh{d}}}f}``210{{{b{ce}}}{{`{{Ej{}{{Ed{{Df{c}}}}}}}}}f{{h{c}}}}0`{BnBn}{{{Df{ce}}}{{Df{ce}}}AfAf}{{{b{ce}}}{{b{ce}}}{Aff}{Af{h{c}}}}{ElEl}{{{En{c}}}{{En{c}}}{Aff}}{{{F`{c}}}{{F`{c}}}{Aff}}{{{j{c}}}{{j{c}}}Af}{EhEh}{{{C`{c}}}{{C`{c}}}Af}{{{Cb{c}}}{{Cb{c}}}Af}{{{Bb{c}}}{{Bb{c}}}Af}{{{Bd{ce}}}{{Bd{ce}}}AfAf}{{{Cf{ce}}}{{Cf{ce}}}AfAf}{FbFb}{FdFd}{{{Ff{c}}}{{Ff{c}}}Af}{DbDb}{nn}{dd}{{ce}Dh{}{}}000000000000000000{{BnBn}Fh}{{{j{c}}{j{c}}}FhFj}{{EhEh}Fh}{{{Bb{c}}{Bb{c}}}FhFj}{{DbDb}Fh}{{nn}Fh}{{dd}Fh}``{{{b{ce}}e}{{b{ce}}}f{{h{c}}}}{{{Fn{}{{Fl{c}}}}eg}c{G`AdAf}f{{An{d}{{Al{c}}}}}}{{Gbcg}ef{}{{An{d}{{Al{e}}}}}}{{Gdcg}ef{}{{An{d}{{Al{e}}}}}}{{{Fn{}{{Fl{c}}}}{j{e}}}c{G`AdAf}f}0``{{}{{Gf{ce}}}{}{}}{{}{{Gh{ceDh}}}f{{h{c}}Gj}}{{}{{b{ce}}}f{{h{c}}Gj}}{{}{{j{c}}}{}}{{}Dl}{{}n}{{}d}`{c{{Gl{Bn}}}Gn}{c{{Gl{{Df{eg}}}}}GnH`H`}{c{{Gl{{b{eg}}}}}Gn{H`f}{H`{h{e}}}}{c{{Gl{El}}}Gn}{c{{Gl{Eh}}}Gn}{c{{Gl{d}}}Gn}{{{f{}{{A`{c}}}}}c{AdAfAhAj}}{Ehc{}}{{{Bb{c}}}ef{}}{{Dlc}Dl{{Hb{Bn}}}}{{{b{ce}}}{{Hd{ce}}}f{{h{c}}}}{{{b{ce}}}{{`{Ad}}}f{{h{c}}}}````{{{b{ce}}{b{ce}}e}{{b{ce}}}f{{h{c}}}}``{{{b{ce}}{b{ce}}}Dhf{{h{c}}}}{{BnBn}Ab}{{ElEl}Ab}{{{F`{c}}{F`{c}}}Abf}{{{j{c}}{j{c}}}AbHf}{{EhEh}Ab}{{{C`{c}}{C`{c}}}AbHf}{{{Cb{c}}{Cb{c}}}AbHf}{{{Bb{c}}{Bb{c}}}AbHf}{{DbDb}Ab}{{nn}Ab}{{dd}Ab}{{ce}Ab{}{}}000000000000000000000{{{b{ce}}{j{c}}{j{c}}}{{Bj{d}}}f{{h{c}}}}{{{Gh{ceg}}{j{c}}{j{c}}}{{Eb{c}}}f{{h{c}}}{{Hh{ce}}}}{{{b{ce}}{j{c}}{j{c}}}{{Eb{c}}}f{{h{c}}}}{{{Gh{ceg}}{j{c}}}{{Eb{c}}}f{{h{c}}}{{Hh{ce}}}}{{{b{ce}}{j{c}}}{{Eb{c}}}f{{h{c}}}}{{{Gh{ceg}}{l{c}}n}{{Eb{c}}}f{{h{c}}}{{Hh{ce}}}}{{{b{ce}}{l{c}}n}{{Eb{c}}}f{{h{c}}}}{{{b{ce}}dd}{{Eb{c}}}f{{h{c}}}}{{{Gh{ceg}}{j{c}}{l{c}}n}{{Eb{c}}}f{{h{c}}}{{Hh{ce}}}}{{{b{ce}}{j{c}}{l{c}}n}{{Eb{c}}}f{{h{c}}}}`{{{b{ce}}d}df{{h{c}}}}{{{Hj{ecg}}d}{{Hl{{j{c}}}}}f{{Fn{c}}}{{h{c}}}}{{{Hj{ecg}}d}{}f{{Fn{c}}}{{h{c}}}}{{{Hj{ecg}}d}cf{{Fn{c}}}{{h{c}}}}{{{En{c}}}{{Hn{c}}}f}{{{Hd{ce}}I`}Ib{fE`}{{h{c}}}}{{{Hd{ce}}I`}Ibf{{h{c}}}}{{BnI`}{{Gl{DhId}}}}0{{{Eb{c}}I`}Ib{fE`If}}{{{Gh{ceg}}I`}Ibf{{h{c}}}Ad}{{{Df{ce}}I`}IbAdAd}{{{b{ce}}I`}Ibf{{h{c}}}}{{ElI`}Ib}{{{En{c}}I`}Ib{Adf}}{{{En{c}}I`}Ib{fE`If}}{{{F`{c}}I`}Ib{Adf}}{{{F`{c}}I`}Ib{fE`If}}{{{Hj{ecg}}I`}Ib{Adf}{Ad{Fn{c}}}{Ad{h{c}}}}{{GbI`}Ib}{{GdI`}Ib}{{IhI`}Ib}0{{{j{c}}I`}IbAd}{{{j{c}}I`}Ib{fE`}}{{{Ij{c}}I`}IbAd}{{{Ij{c}}I`}IbE`}{{EhI`}Ib}0{{{C`{c}}I`}IbAd}{{{Il{c}}I`}IbAd}{{{Il{c}}I`}IbE`}{{{Cb{c}}I`}Ib{fE`}}{{{Cb{c}}I`}IbAd}{{{Bb{c}}I`}IbAd}{{{Bb{c}}I`}Ib{fE`}}{{{Bf{c}}I`}Ib{Adf}}{{{Bd{ce}}I`}Ib{fE`}{{h{c}}}}{{{Cf{ce}}I`}IbAdAd}{{{Dn{c}}I`}IbAd}{{FbI`}Ib}{{FdI`}Ib}0{{{Ff{c}}I`}IbAd}{{InI`}Ib}{{DlI`}Ib}{{DbI`}Ib}0{{nI`}Ib}{{dI`}Ib}0{{{f{}{{A`{c}}}}eg}e{AdAfAhAj}Af{{An{ed}{{Al{e}}}}}}0{{{f{}{{A`{c}}}}e}Dh{AdAfAhAj}{{An{d}}}}000``{cc{}}{J`Bn}1{D`Bn}1222222222222222{{{Bj{c}}}{{j{c}}}{}}3333{{{j{c}}}{{Cb{c}}}f}{{{Bh{c}}}{{Cb{c}}}f}{{{l{c}}}{{Cb{c}}}f}66666666666{DdDb}77{Cld}8{{D`{Bj{d}}}{{Gl{{If{}{{Jb{c}}}}c}}}Ad}{{D`{Bj{d}}}{{Gl{Ehc}}}{}}{{D`{Bj{d}}}{{Gl{{Bb{c}}e}}}If{}}{D`{{Gl{Bn}}}}{D`{{Gl{{j{c}}e}}}If{}}{D`{{Gl{{C`{c}}e}}}{fIf}{}}{D`{{Gl{{Cb{c}}e}}}If{}}{D`{{Gl{Dbc}}}{}}9{{{Bj{d}}}Cn}{{{Bj{d}}}d}{{nDb}{{Cd{d}}}}{{{b{ce}}}Clf{{h{c}}}}{{{Eb{c}}}J`{fE`If}}{{{Eb{c}}}{{Bj{J`}}}{fE`If}}{{ce}Jd{AjJf}Jh}0000000{{{En{c}}}{{F`{c}}}f}04{Jj{{Cd{{l{c}}}}}f}0{Bl{{Cd{{l{c}}}}}f}0{{{Cb{c}}}{{Cd{{l{c}}}}}f}0{{{Cf{gi}}}{{Cd{{l{c}}}}}f{{h{c}}}{{Ch{ce}}}{{Bl{ce}}}}{{{F`{c}}}{{j{c}}}{fE`If}}8{{{F`{c}}}J`{fE`If}}9{{{Eb{c}}}Jl{fE`If}}{{{b{ce}}}Jnf{{h{c}}}}{{{F`{c}}}Abf}0{{Bnc}DhK`}{{Elc}DhK`}{{{j{c}}e}DhAjK`}{{Ehc}DhK`}{{{Bb{c}}e}DhAjK`}{{Dbc}DhK`}{{nc}DhK`}{{dc}DhK`}```{{{b{ce}}d}{{j{c}}}f{{h{c}}}}{{{b{ce}}d}cf{{h{c}}}}{{{b{ce}}d{Kd{ddKb}}}{{Hl{{Cb{c}}n}}}f{{h{c}}}}{{{b{ce}}d}gf{{h{c}}}{}}{{{j{c}}d}cf}{{nDb}c{}}21{{nDbd}{{Cd{d}}}}{ce{}{}}0000000000000000000000000000000000{{{j{c}}}Abf}{CnAb}0{{{Df{ce}}}Ab{}{}}{{{b{ce}}}Abf{{h{c}}}}{{{f{}{{A`{c}}}}}Ab{AdAfAhAj}}0{{{Df{ce}}}{{`{{Ej{}{{Ed{c}}}}}}}{}{}}``{{{f{}{{A`{c}}}}g}{{j{{f{}{{A`{c}}}}}}}{AdAfAhAj}{{Kf{{Bh{{f{}{{A`{c}}}}}}}}}{{An{d}{{Al{e}}}}}}0{cEh{{Hb{Bn}}}}{{{Df{ce}}}{{`{{Kh{}{{Ed{c}}}}}}}f{}}{CnCl}{{{f{}{{A`{c}}}}}Cl{AdAfAhAj}}0{{{Df{ce}}}Cl{}{}}{dCl}{{{b{ce}}g}{{Cd{d}}}f{{h{c}}}{{Kj{c}}}}{{{b{ce}}{j{c}}}{{Cd{d}}}f{{h{c}}}}{{{b{ce}}{j{c}}}{{Cd{{Bj{d}}}}}f{{h{c}}}}{{{b{c{h{}{{B`{e}}}}}}c}efAd}{{{Gh{ceHh}}}Hhf{{h{c}}}}{{{Eb{c}}}{{Hn{c}}}f}{{{L`{}{{Kl{c}}{Kn{e}}}}i}ef{{h{c}}}f{{h{g}}}}{{{Gf{ei}}g}kf{f{Lb{c}}}{{h{c}}}{{h{e}}{Lb{g}}}{}}{{{f{}{{A`{c}}}}e}{{f{}{{A`{c}}}}}{AdAfAhAj}{{An{d}{{Al{d}}}}}}0{{{L`{}{{Kl{c}}{Kn{e}}}}}{}f{{h{c}}}}{{{Gf{ei}}}{}f{f{Lb{c}}}{{h{c}}}{{h{e}}{Lb{g}}}}10{{{L`{}{{Kl{c}}{Kn{e}}}}{Df{g}}}{{Df{c}}}f{{h{c}}}f}0{{{L`{}{{Kl{c}}{Kn{e}}}}{b{gi}}}{{b{ce}}}f{{h{c}}}f{{h{g}}}}0{{{L`{}{{Kl{c}}{Kn{e}}}}g}cf{{h{c}}}f}{{{Gf{ei}}c}kf{f{Lb{c}}}{{h{c}}}{{h{e}}{Lb{g}}}{}}{{{f{}{{A`{c}}}}{f{}{{A`{c}}}}}Ab{AdAfAhAj}}{{EhEh}Ab}{{{Bb{c}}{Bb{c}}}Abf}`{{{h{}{{B`{c}}}}cc}DjAd}{{cc}DjFj}0{{{Cd{c}}{Cd{c}}e}Dj{}{{Ld{cc}{{Al{Dj}}}}}}{{{b{c{h{}{{B`{e}}}}}}d}DhfAd}0`{{Jj{b{ce}}}Clf{{h{c}}}}0``{cBn{{Kf{D`}}}}{{{Lf{c}}}{{Eb{c}}}f}{{{b{ce}}g}{{Lh{ce}}}f{{h{c}}}{{Lj{ce}}}}{e{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}}{e{{b{ce}}}f{{h{c}}}}{{c{Bj{{Lf{c}}}}}{{En{c}}}f}{{c{Hn{c}}}{{F`{c}}}f}{{{b{ce}}g}{{Hj{gce}}}f{{h{c}}}{{Fn{c}}}}{{D`{Bj{d}}}Ih}{{c{Bj{d}}}Eh{{Hb{Bn}}}}{{{Bj{{Hl{Db{l{c}}}}}}}{{C`{c}}}f}{{{l{c}}}{{Cb{c}}}f}{{cik}{{Gl{{Bd{eg}}J`}}}{{Hb{Bn}}}f{{h{e}}}{{Jj{eg}}LlLn}{{Bl{eg}}LlLn}}{{{Cb{c}}{Cb{c}}}{{Dn{c}}}f}``{{Lj{b{ce}}dc}M`f{{h{c}}}}{{Gb{b{ce}}dc}M`f{{h{c}}}}`{{{b{ce}}}Clf{{h{c}}}}`{{{Df{ce}}}{{`{{Ej{}{{Ed{d}}}}}}}{}{}}{{D`D`}{{Dn{c}}}If}{{BnBn}{{Cd{Fh}}}}{{{j{c}}{j{c}}}{{Cd{Fh}}}G`}{{EhEh}{{Cd{Fh}}}}{{{Bb{c}}{Bb{c}}}{{Cd{Fh}}}G`}{{DbDb}{{Cd{Fh}}}}{{nn}{{Cd{Fh}}}}{{dd}{{Cd{Fh}}}}{{{b{c{h{}{{B`{e}}}}}}dd{Cd{El}}}DhfAd}0{{{j{c}}Cl}J`{fE`}}{{{Cb{c}}Cl}J`{fE`}}{{{Gh{ceg}}}Dhf{{h{c}}}{{Hh{ce}}}}=```{{{F`{c}}}{{F`{c}}}f}{{{Gh{ceg}}}Fdf{{h{c}}}{{Hh{ce}}}}{{{F`{c}}{l{c}}{l{c}}}{{F`{c}}}f}``{{DlcCl}Dl{{Hb{Bn}}}}0{{{Hd{ce}}gk}{{Mb{Dh}}}{fE`}{{h{c}}}{{Kf{Md}}}{{Kf{Md}}}{{Ef{}{{Ed{i}}}}}}{{{Gh{ceg}}i}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}{{Ef{}{{Ed{{Bd{ce}}}}}}}}{{{Hd{ce}}i}{{Mb{Dh}}}{fE`}{{h{c}}}{{Kf{Md}}}{{Ef{}{{Ed{g}}}}}}{{Jj{b{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}0{{{Bd{ce}}{b{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}{{Jj{b{ce}}d}{{Cd{{Bf{c}}}}}f{{h{c}}}}0{{Jj{b{ce}}dCl}{{Cd{{Bf{c}}}}}f{{h{c}}}}{{{C`{c}}{b{ce}}dCl}{{Cd{{Bf{c}}}}}f{{h{c}}}}{{{Cb{c}}{b{ce}}dCl}{{Cd{{Bf{c}}}}}f{{h{c}}}}{{CjCl{b{ce}}{Bd{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}0{{DlCl{b{ce}}{Bd{ce}}}{{Bj{{Bf{c}}}}}f{{h{c}}}}``{{Jj{b{ce}}Cl}{{Bj{{Bf{c}}}}}f{{h{c}}}}0{{{Cb{c}}{b{ce}}Cl}{{Bj{{Bf{c}}}}}f{{h{c}}}}{{{Bd{ce}}{b{ce}}Cl}{{Bj{{Bf{c}}}}}f{{h{c}}}}`{{Bnc}GlMf}{{{Df{ce}}g}GlMhMhMf}{{{b{ce}}g}Gl{Mhf}{Mh{h{c}}}Mf}{{Elc}GlMf}{{{j{c}}e}Gl{fE`}Mf}{{Ehc}GlMf}{{Fbc}GlMf}{{Fdc}GlMf}{{{Ff{c}}e}GlMhMf}{{dc}GlMf}{{{b{ce}}d}Dhf{{h{c}}}}{{{Lh{ce}}d}{{j{c}}}f{{h{c}}}}{{{Lh{ce}}{Bh{d}}}{{Hl{{j{c}}{Bj{d}}}}}f{{h{c}}}}{{{Ij{c}}}{{Cd{Mj}}}Mj}{{{Il{c}}}{{Cd{Mj}}}Mj}`````{{{Lh{ce}}M`}{{Lh{ce}}}f{{h{c}}}}{{{Hd{ce}}g}{{Mb{Dh}}}{fE`}{{h{c}}}{{Kf{Ml}}}}{ce{}{}}00000000000000000011{cJ`{}}000000000000002{{{b{ce}}}Clf{{h{c}}}}0``{{{f{}{{A`{c}}}}g}{{Gl{{j{{f{}{{A`{c}}}}}}e}}}{AdAfAhAj}{}{{An{d}{{Al{{Gl{{f{}{{A`{c}}}}e}}}}}}}}0{{{f{}{{A`{c}}}}g}{{Gl{Dhe}}}{AdAfAhAj}Af{{An{d}{{Al{{Gl{Dhe}}}}}}}}0{c{{Gl{e}}}{}{}}000000000000000{{{Cb{c}}}{{Gl{{j{c}}e}}}f{}}111111111111111111111111111111111111111111111111111111`{cMn{}}0000000000000000000000000000000000{{{b{ce}}dd}Abf{{h{c}}}}{{{b{ce}}{l{c}}{l{c}}ng}{{Hl{dAb}}}f{{h{c}}}{{Hb{Bn}}}}{{{b{ce}}ddg}Abf{{h{c}}}{{Hb{Bn}}}}{{{f{}{{A`{c}}}}e}Dh{AdAfAhAj}{{An{d}{{Al{d}}}}}}0`{Jj{{Bj{Db}}}}{Bl{{Bj{Db}}}}0{Ch{{Bj{Db}}}}0{{{C`{c}}}{{Bj{Db}}}f}0{{{Cb{c}}}{{Bj{Db}}}f}00{{{Cf{gi}}}{{Bj{Db}}}f{{h{c}}}{{Ch{ce}}}{{Bl{ce}}}}{{{Dn{c}}}{{Bj{Db}}}f}{{{Hd{ce}}Ab}{{Hd{ce}}}{fE`}{{h{c}}}}{{DlCl}Dl}{Cln}{{{Hd{ce}}g}{{Hd{ce}}}{fE`}{{h{c}}}{{Hb{J`}}}}{{{Gh{ceg}}{b{ce}}}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}}{{{Gh{ceg}}}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}}{{{b{ce}}}{{b{ce}}}f{{h{c}}}}1010{{{Gh{ceg}}{j{c}}}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}}{{{Gh{ceg}}i}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}{{An{{Gh{ceg}}}{{Al{{Gl{DhJ`}}}}}}}}7{{{Gh{ceg}}Cl}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}}0{{{Gh{ceg}}i}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}{{Cj{ce}}}}{{{Gh{ceg}}N`}{{Gh{ceg}}}f{{h{c}}}{{Hh{ce}}}}65```","D":"CDh","p":[[5,"EGraph",0,873],[5,"Id",0],[10,"Language",0,874],[10,"Analysis",0,874],[5,"RecExpr",0,874],[8,"PatternAst",0,875],[5,"Subst",0,876],[17,"Discriminant"],[1,"bool"],[10,"Debug",877],[10,"Clone",878],[10,"Eq",879],[10,"Hash",880],[17,"Output"],[10,"FnMut",881],[17,"Data"],[6,"ENodeOrVar",0,875],[5,"Rewrite",0,882],[5,"SearchMatches",0,875],[1,"slice"],[5,"Vec",883],[10,"Applier",0,882],[5,"Symbol",0],[5,"MultiPattern",0,884],[5,"Pattern",0,875],[6,"Option",885],[5,"ConditionalApplier",0,882],[10,"Condition",0,882],[10,"RewriteScheduler",0,886],[1,"usize"],[10,"LanguageChildren",0,874],[1,"str"],[5,"Var",0,876],[1,"u32"],[5,"EClass",0,887],[1,"unit"],[5,"DidMerge",0,874],[5,"BackoffScheduler",0,886],[5,"ConditionEqual",0,882],[10,"Display",877],[5,"Explanation",0,888],[17,"Item"],[10,"IntoIterator",889],[5,"SymbolLang",0,874],[10,"ExactSizeIterator",890],[6,"Justification",0,888],[5,"TreeTerm",0,888],[5,"FlatTerm",0,888],[6,"StopReason",0,886],[5,"Report",0,886],[5,"Iteration",0,886],[6,"Ordering",879],[10,"Ord",879],[17,"Cost"],[10,"CostFunction",0,891],[10,"PartialOrd",879],[5,"AstSize",0,891],[5,"AstDepth",0,891],[5,"SimpleLanguageMapper",0,873],[5,"Runner",0,886],[10,"Default",892],[6,"Result",893],[10,"Deserializer",894],[10,"Deserialize",894],[10,"Into",895],[5,"Dot",0,896],[10,"PartialEq",879],[10,"IterationData",0,886],[5,"Extractor",0,891],[1,"tuple"],[8,"FlatExplanation",0,888],[5,"Formatter",877],[8,"Result",877],[5,"Error",877],[10,"FromOp",0,874],[5,"FromOpError",0,874],[6,"RecExprParseError",0,874],[6,"MultiPatternParseError",0,884],[5,"SimpleScheduler",0,886],[5,"String",897],[17,"Error"],[1,"u64"],[10,"Sized",898],[10,"BuildHasher",880],[10,"Searcher",0,882],[5,"BigUint",899],[8,"UnionEqualities",0,888],[10,"Hasher",880],[8,"FxBuildHasher",900],[5,"IndexMap",901],[10,"AsRef",895],[10,"Iterator",902],[10,"BorrowMut",903],[17,"L2"],[17,"A2"],[10,"LanguageMapper",0,873],[10,"From",895],[10,"FnOnce",881],[8,"TreeExplanation",0,888],[5,"LpExtractor",0,904],[10,"LpCostFunction",0,904],[10,"Send",898],[10,"Sync",898],[1,"f64"],[8,"Result",905],[5,"OsStr",906],[10,"Serializer",907],[10,"Serialize",907],[10,"Error",908],[5,"Path",909],[5,"TypeId",910],[5,"Duration",911]],"r":[[1,874],[2,882],[3,891],[4,891],[5,886],[8,882],[9,882],[10,882],[13,891],[15,874],[17,896],[18,887],[19,873],[21,875],[24,888],[25,891],[26,888],[27,888],[28,874],[29,874],[32,886],[33,886],[35,888],[37,874],[38,874],[39,873],[40,904],[41,904],[42,884],[43,884],[46,875],[48,875],[50,874],[51,874],[52,886],[53,882],[54,886],[56,886],[58,875],[59,882],[60,873],[61,886],[62,886],[63,876],[65,874],[67,888],[68,888],[69,888],[70,876],[581,874],[582,874],[583,874]],"b":[[343,"impl-Display-for-Dot%3C\'a,+L,+N%3E"],[344,"impl-Debug-for-Dot%3C\'a,+L,+N%3E"],[345,"impl-Display-for-GlobalSymbol"],[346,"impl-Debug-for-GlobalSymbol"],[352,"impl-Debug-for-TreeTerm%3CL%3E"],[353,"impl-Display-for-TreeTerm%3CL%3E"],[354,"impl-Debug-for-FlatTerm%3CL%3E"],[355,"impl-Display-for-FlatTerm%3CL%3E"],[359,"impl-Display-for-FromOpError"],[360,"impl-Debug-for-FromOpError"],[361,"impl-Debug-for-RecExpr%3CL%3E"],[362,"impl-Display-for-RecExpr%3CL%3E"],[363,"impl-Debug-for-RecExprParseError%3CE%3E"],[364,"impl-Display-for-RecExprParseError%3CE%3E"],[365,"impl-Display-for-SymbolLang"],[366,"impl-Debug-for-SymbolLang"],[368,"impl-Debug-for-MultiPatternParseError%3CE%3E"],[369,"impl-Display-for-MultiPatternParseError%3CE%3E"],[370,"impl-Display-for-Pattern%3CL%3E"],[371,"impl-Debug-for-Pattern%3CL%3E"],[372,"impl-Debug-for-ENodeOrVar%3CL%3E"],[373,"impl-Display-for-ENodeOrVar%3CL%3E"],[379,"impl-Display-for-Report"],[380,"impl-Debug-for-Report"],[384,"impl-Display-for-Var"],[385,"impl-Debug-for-Var"],[387,"impl-Debug-for-Id"],[388,"impl-Display-for-Id"],[398,"impl-From%3CString%3E-for-GlobalSymbol"],[400,"impl-From%3C%26str%3E-for-GlobalSymbol"],[401,"impl-From%3C%26String%3E-for-GlobalSymbol"],[422,"impl-From%3C%26RecExpr%3CL%3E%3E-for-Pattern%3CL%3E"],[423,"impl-From%3C%26%5BL%5D%3E-for-Pattern%3CL%3E"],[424,"impl-From%3CRecExpr%3CENodeOrVar%3CL%3E%3E%3E-for-Pattern%3CL%3E"],[471,"impl-Searcher%3CL,+A%3E-for-Pattern%3CL%3E"],[472,"impl-Applier%3CL,+A%3E-for-Pattern%3CL%3E"],[843,"impl-Searcher%3CL,+A%3E-for-MultiPattern%3CL%3E"],[844,"impl-Applier%3CL,+A%3E-for-MultiPattern%3CL%3E"],[845,"impl-Applier%3CL,+A%3E-for-Pattern%3CL%3E"],[846,"impl-Pattern%3CL%3E"],[847,"impl-Searcher%3CL,+A%3E-for-Pattern%3CL%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMUBNwBfAAEAYgACAGcAAABrAAEAbgAAAHYARgDAAAAAwwAAAMUAAADKAAEAzwABANQALAAFAQEACwEGABMBBQAaAQEAIQEAACQBAAAnASAAWAEtAI8BAACRAQEAogEAAKcBAgC1AQAAuAEAALsBBgDEAQAAyQEHANgBAgDjAQcA8QEEACwCAAA0AgAAOAIAADoCAABAAgAAQgICAGECAABnAgYAdAIAAHYCAACHAgEAiwIBAJACAACTAgkAoAIBAKMCAACpAhIAvgIOANACAADWAkYAHgMiAEwDAgBQAwIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
